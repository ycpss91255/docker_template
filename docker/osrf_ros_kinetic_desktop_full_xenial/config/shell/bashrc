
# Write Hello and alias to bashrc
echo 'Hello Docker!'

function alias_func() {
    alias eb='vim ${HOME}/.bashrc'
    alias sb='source ${HOME}/.bashrc && \
        echo "sourced ${HOME}/.bashrc"'
    alias wb='source ${HOME}/work/install/local_setup.bash && \
        echo "sourced ${HOME}/work/install/local_setup.bash"'
}

function color_git_branch() {
    local color_prompt=yes

    [[ -z $BASH_VERSION || $- != *i* ]] && return 0

    function parse_git_branch() {
        local ref=""
        ref=$(git rev-parse --abbrev-ref HEAD 2>/dev/null) || return 0
        if [[ "$ref" == "HEAD" ]]; then
            ref=$(git describe --tags --exact-match 2>/dev/null \
                || git rev-parse --short HEAD 2>/dev/null) || return 0
        fi
        [[ -n "$ref" ]] && printf '(%s)' "$ref"
    }

    if [ "${color_prompt}" = "yes" ]; then
        PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[01;31m\]$(parse_git_branch)\[\033[00m\]\$ '
    else
        PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w$(parse_git_branch)\$ '
    fi
}

function ros_source() {
    local _ws="${1:-"${HOME}/work"}"
    local -ar _files=(
        "/opt/ros/${ROS_DISTRO}/setup.bash"
        "${_ws}/devel/local_setup.bash"
    )

    local _file=""
    local _sourced=0
    for _file in "${_files[@]}"; do
        if [ -f "$_file" ]; then
            source "${_file}"
            printf "sourced %s\n" "${_file}" >&2
            _sourced=1
        fi
    done

    if [ $_sourced -eq 0 ]; then
        local _file=""
        for _file in "${_files[@]}"; do
            printf "not found: %s\n" "${_file}" >&2
        done
    fi
}
alias_func
color_git_branch
ros_source
